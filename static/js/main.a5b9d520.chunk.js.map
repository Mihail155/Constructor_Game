{"version":3,"sources":["img/persik.png","panels/Persik.js","App.js","index.js"],"names":["module","exports","platform","App","groupId","nachal","nachalo","bridge","send","GroupToken","tokenGroup","ReactDOM","render","document","getElementById"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,oC,ghBCY5BC,cCwBf,IA+BeC,EA/BH,WAEZ,IAMIC,GAhCJ,SAAiBC,GAGjB,GAAc,IAAXA,KAuCHC,CAFAF,EAFYG,IAAOC,KAAK,0BAEL,KAAT,UA5BV,SAAoBC,GAGpB,GAAiB,IAAdA,IAiCHC,CAJcH,IAAOC,KAAK,4BAA6B,CAAC,OAAU,QAAS,SAAYJ,EAAS,MAAS,aAEtF,KAAX,cAIUG,IAAOC,KAAK,8BAEO,KAAf,QCxDtBD,IAAOC,KAAK,gBAEZG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a5b9d520.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.5d3bb272.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\n\n\n\nfunction nachalo(nachal)\n{\n\nif(nachal === 1)\n{\nreturn 1;\n}\n\n}\n\n\n\nfunction tokenGroup(GroupToken)\n{\n\nif(GroupToken != \"\")\n{\nreturn \"ok\";\n}\n\n}\n\n\n\nconst App = () => { \n\nlet token_group = {};\n\nlet token = \"\";\n\nlet groupDate = {};\n\nlet groupId = 0;\n\nlet yes_uvedomlenie = {};\n\nlet boolean_uvedomlenie = false;\n\ngroupDate = bridge.send(\"VKWebAppAddToCommunity\");\n\ngroupId = groupDate[\"data\"][\"group_id\"]\n\nnachalo(groupId);\n\ntoken_group = bridge.send(\"VKWebAppGetCommunityToken\", {\"app_id\": 7617611, \"group_id\": groupId, \"scope\": \"messages\"});\n\ntoken = token_group[\"data\"][\"access_token\"];\n\ntokenGroup(token);\n\nyes_uvedomlenie = bridge.send(\"VKWebAppAllowNotifications\");\n\nboolean_uvedomlenie = yes_uvedomlenie[\"data\"][\"result\"];\n\n}\nexport default App;\n\n\n\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}